{"remainingRequest":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\babel-loader\\lib\\index.js!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\src\\components\\GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\src\\components\\GoogleMap.vue","mtime":1545430000671},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'GoogleMap',\n  data: function data() {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: {\n        lat: 45.508,\n        lng: -73.587\n      },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      startPosition: null,\n      endPosition: null\n    };\n  },\n  mounted: function mounted() {\n    this.geolocate();\n  },\n  methods: {\n    // receives a place object via the autocomplete component\n    setPlace: function setPlace(place) {\n      debugger;\n      this.currentPlace = place;\n    },\n    addMarker: function addMarker() {\n      if (this.currentPlace) {\n        var marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        this.markers.push({\n          position: marker\n        });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function geolocate() {\n      var _this = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    },\n    pinDragged: function pinDragged(location) {\n      console.log(\"AAA\");\n    },\n    setStartMarker: function setStartMarker(location) {\n      this.startPosition = location;\n    },\n    setEndMarker: function setEndMarker(location) {\n      this.endPosition = location;\n    }\n  }\n};",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA;AACA;AACA,MAAA,MAAA,EAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,OAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA,EALA;AAMA,MAAA,YAAA,EAAA,IANA;AAOA,MAAA,aAAA,EAAA,IAPA;AAQA,MAAA,WAAA,EAAA;AARA,KAAA;AAUA,GAbA;AAeA,EAAA,OAfA,qBAeA;AACA,SAAA,SAAA;AACA,GAjBA;AAmBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,KAFA,EAEA;AACA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KALA;AAMA,IAAA,SANA,uBAMA;AACA,UAAA,KAAA,YAAA,EAAA;AACA,YAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,KAAA,YAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,EADA;AAEA,UAAA,GAAA,EAAA,KAAA,YAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA;AAFA,SAAA;AAIA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA,YAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA;AACA,KAjBA;AAkBA,IAAA,SAAA,EAAA,qBAAA;AAAA;;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA,QADA;AAEA,UAAA,GAAA,EAAA,QAAA,CAAA,MAAA,CAAA;AAFA,SAAA;AAIA,OALA;AAMA,KAzBA;AA0BA,IAAA,UAAA,EAAA,oBAAA,QAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,KA5BA;AA6BA,IAAA,cAAA,EAAA,wBAAA,QAAA,EAAA;AACA,WAAA,aAAA,GAAA,QAAA;AACA,KA/BA;AAgCA,IAAA,YAAA,EAAA,sBAAA,QAAA,EAAA;AACA,WAAA,WAAA,GAAA,QAAA;AACA;AAlCA;AAnBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"map\">\r\n    <div>\r\n      <h2>Search and add a pin</h2>\r\n      <label> Start point:\r\n        <gmap-autocomplete @place_changed=\"setPlace\">\r\n        </gmap-autocomplete>\r\n        <button @click=\"setStartMarker\">Add</button>\r\n      </label>\r\n      <label> End point:\r\n        <gmap-autocomplete @place_changed=\"setPlace\">\r\n        </gmap-autocomplete>\r\n        <button @click=\"setEndMarker\">Add</button>\r\n      </label>\r\n      <br/>\r\n\r\n    </div>\r\n    <br>\r\n    <gmap-map\r\n      :center=\"center\"\r\n      :zoom=\"12\"\r\n      style=\"width:100%;  height: 400px;\"\r\n    >\r\n      <gmap-marker\r\n        :key=\"index\"\r\n        v-for=\"(m, index) in markers\"\r\n        :position=\"m.position\"\r\n        :clickable=\"true\"\r\n        :draggable=\"true\"\r\n        @click=\"center=m.position\"\r\n        @drag=\"pinDragged\"\r\n      ></gmap-marker>\r\n      <gmap-marker\r\n        :position=\"startPosition\"\r\n        :clickable=\"true\"\r\n        :label=\"start\"\r\n        :draggable=\"true\"\r\n        @click=\"center=startPosition\"\r\n        @drag=\"pinDragged\"\r\n      ></gmap-marker>\r\n      <gmap-marker\r\n        :position=\"endPosition\"\r\n        :clickable=\"true\"\r\n        :label=\"end\"\r\n        :draggable=\"true\"\r\n        @click=\"center=endPosition\"\r\n        @drag=\"pinDragged\"\r\n      ></gmap-marker>\r\n    </gmap-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'GoogleMap',\r\n  data () {\r\n    return {\r\n      // default to Montreal to keep it simple\r\n      // change this to whatever makes sense\r\n      center: { lat: 45.508, lng: -73.587 },\r\n      markers: [],\r\n      places: [],\r\n      currentPlace: null,\r\n      startPosition: null,\r\n      endPosition: null,\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    this.geolocate()\r\n  },\r\n\r\n  methods: {\r\n    // receives a place object via the autocomplete component\r\n    setPlace (place) {\r\n      debugger;\r\n      this.currentPlace = place\r\n    },\r\n    addMarker () {\r\n      if (this.currentPlace) {\r\n        const marker = {\r\n          lat: this.currentPlace.geometry.location.lat(),\r\n          lng: this.currentPlace.geometry.location.lng()\r\n        }\r\n        this.markers.push({ position: marker })\r\n        this.places.push(this.currentPlace)\r\n        this.center = marker\r\n        this.currentPlace = null\r\n      }\r\n    },\r\n    geolocate: function () {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.center = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        }\r\n      })\r\n    },\r\n    pinDragged: function(location){\r\n      console.log(\"AAA\")\r\n    },\r\n    setStartMarker: function(location){\r\n      this.startPosition = location\r\n    },\r\n    setEndMarker: function(location){\r\n      this.endPosition = location\r\n    },\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src\\components"}]}