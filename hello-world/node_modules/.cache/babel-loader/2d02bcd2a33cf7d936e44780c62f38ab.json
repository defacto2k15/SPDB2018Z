{"remainingRequest":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\babel-loader\\lib\\index.js!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\src\\components\\Marker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\src\\components\\Marker.vue","mtime":1545498145881},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\nimport MapElement from 'vue2-google-maps'; // Those Vue props will update automatically\n// (Two-way binding with .sync modifier)\n\nvar boundProps = ['animation', 'clickable', 'cursor', 'draggable'];\n// Events from Google Maps emitted as Vue events\nvar redirectedEvents = ['click', 'rightclick', 'dblclick', 'drag'];\nexport default {\n  mixins: [// You need to use this mixin\n  MapElement],\n  // When Google Maps is ready\n  googleMapsReady: function googleMapsReady() {\n    var options = Object.assign({}, this.$props);\n    options.map = this.$_map; // Create Google Maps objects\n\n    this.$_marker = new window.google.maps.Marker(options); // Bind the Vue props\n\n    this.bindProps(this.$_marker, boundProps); // Emit the events from Google Maps\n\n    this.redirectEvents(this.$_marker, redirectedEvents);\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Teardown\n    if (this.$_marker) {\n      this.$_marker.setMap(null);\n    }\n  }\n};",{"version":3,"sources":["Marker.vue"],"names":[],"mappings":";;;;;;;AAOA,OAAA,UAAA,MAAA,kBAAA,C,CAEA;AACA;;AACA,IAAA,UAAA,GAAA,CACA,WADA,EAEA,WAFA,EAGA,QAHA,EAIA,WAJA,CAAA;AAQA;AACA,IAAA,gBAAA,GAAA,CACA,OADA,EAEA,YAFA,EAGA,UAHA,EAIA,MAJA,CAAA;AAQA,eAAA;AACA,EAAA,MAAA,EAAA,CACA;AACA,EAAA,UAFA,CADA;AAMA;AACA,EAAA,eAPA,6BAOA;AACA,QAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,MAAA,CAAA;AACA,IAAA,OAAA,CAAA,GAAA,GAAA,KAAA,KAAA,CAFA,CAIA;;AACA,SAAA,QAAA,GAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CALA,CAMA;;AACA,SAAA,SAAA,CAAA,KAAA,QAAA,EAAA,UAAA,EAPA,CAQA;;AACA,SAAA,cAAA,CAAA,KAAA,QAAA,EAAA,gBAAA;AACA,GAjBA;AAmBA,EAAA,aAnBA,2BAmBA;AACA;AACA,QAAA,KAAA,QAAA,EAAA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,IAAA;AACA;AACA;AAxBA,CAAA","sourcesContent":["<template>\r\n   <div>\r\n     LOL LEL LIL\r\n   </div>\r\n</template>\r\n\r\n<script>\r\n  import MapElement from 'vue2-google-maps'\r\n\r\n// Those Vue props will update automatically\r\n// (Two-way binding with .sync modifier)\r\nconst boundProps = [\r\n  'animation',\r\n  'clickable',\r\n  'cursor',\r\n  'draggable',\r\n  // ...\r\n]\r\n\r\n// Events from Google Maps emitted as Vue events\r\nconst redirectedEvents = [\r\n  'click',\r\n  'rightclick',\r\n  'dblclick',\r\n  'drag',\r\n  // ...\r\n]\r\n\r\nexport default {\r\n  mixins: [\r\n    // You need to use this mixin\r\n    MapElement,\r\n  ],\r\n\r\n  // When Google Maps is ready\r\n  googleMapsReady () {\r\n    const options = Object.assign({}, this.$props)\r\n    options.map = this.$_map\r\n\r\n    // Create Google Maps objects\r\n    this.$_marker = new window.google.maps.Marker(options)\r\n    // Bind the Vue props\r\n    this.bindProps(this.$_marker, boundProps)\r\n    // Emit the events from Google Maps\r\n    this.redirectEvents(this.$_marker, redirectedEvents)\r\n  },\r\n\r\n  beforeDestroy () {\r\n    // Teardown\r\n    if (this.$_marker) {\r\n      this.$_marker.setMap(null)\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}