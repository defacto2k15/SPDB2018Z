{"remainingRequest":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\src\\components\\Marker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\src\\components\\Marker.vue","mtime":1545498145881},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\vueApp\\hello-world\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\n  import MapElement from 'vue2-google-maps'\n\n// Those Vue props will update automatically\n// (Two-way binding with .sync modifier)\nconst boundProps = [\n  'animation',\n  'clickable',\n  'cursor',\n  'draggable',\n  // ...\n]\n\n// Events from Google Maps emitted as Vue events\nconst redirectedEvents = [\n  'click',\n  'rightclick',\n  'dblclick',\n  'drag',\n  // ...\n]\n\nexport default {\n  mixins: [\n    // You need to use this mixin\n    MapElement,\n  ],\n\n  // When Google Maps is ready\n  googleMapsReady () {\n    const options = Object.assign({}, this.$props)\n    options.map = this.$_map\n\n    // Create Google Maps objects\n    this.$_marker = new window.google.maps.Marker(options)\n    // Bind the Vue props\n    this.bindProps(this.$_marker, boundProps)\n    // Emit the events from Google Maps\n    this.redirectEvents(this.$_marker, redirectedEvents)\n  },\n\n  beforeDestroy () {\n    // Teardown\n    if (this.$_marker) {\n      this.$_marker.setMap(null)\n    }\n  },\n}\n",{"version":3,"sources":["Marker.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Marker.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n   <div>\r\n     LOL LEL LIL\r\n   </div>\r\n</template>\r\n\r\n<script>\r\n  import MapElement from 'vue2-google-maps'\r\n\r\n// Those Vue props will update automatically\r\n// (Two-way binding with .sync modifier)\r\nconst boundProps = [\r\n  'animation',\r\n  'clickable',\r\n  'cursor',\r\n  'draggable',\r\n  // ...\r\n]\r\n\r\n// Events from Google Maps emitted as Vue events\r\nconst redirectedEvents = [\r\n  'click',\r\n  'rightclick',\r\n  'dblclick',\r\n  'drag',\r\n  // ...\r\n]\r\n\r\nexport default {\r\n  mixins: [\r\n    // You need to use this mixin\r\n    MapElement,\r\n  ],\r\n\r\n  // When Google Maps is ready\r\n  googleMapsReady () {\r\n    const options = Object.assign({}, this.$props)\r\n    options.map = this.$_map\r\n\r\n    // Create Google Maps objects\r\n    this.$_marker = new window.google.maps.Marker(options)\r\n    // Bind the Vue props\r\n    this.bindProps(this.$_marker, boundProps)\r\n    // Emit the events from Google Maps\r\n    this.redirectEvents(this.$_marker, redirectedEvents)\r\n  },\r\n\r\n  beforeDestroy () {\r\n    // Teardown\r\n    if (this.$_marker) {\r\n      this.$_marker.setMap(null)\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}