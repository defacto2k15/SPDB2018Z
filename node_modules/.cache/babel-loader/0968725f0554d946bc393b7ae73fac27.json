{"remainingRequest":"/home/aleksander/github/connect/node_modules/babel-loader/lib/index.js!/home/aleksander/github/connect/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aleksander/github/connect/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aleksander/github/connect/src/components/AddressDescription.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/aleksander/github/connect/src/components/AddressDescription.vue","mtime":1547693063510},{"path":"/home/aleksander/github/connect/package.json","mtime":1547693698894},{"path":"/home/aleksander/github/connect/node_modules/cache-loader/dist/cjs.js","mtime":1547693114817},{"path":"/home/aleksander/github/connect/node_modules/babel-loader/lib/index.js","mtime":1547693104938},{"path":"/home/aleksander/github/connect/node_modules/cache-loader/dist/cjs.js","mtime":1547693114817},{"path":"/home/aleksander/github/connect/node_modules/vue-loader/lib/index.js","mtime":1547693117285}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'AddressDescription',\n  props: ['title', 'map', 'location'],\n  watch: {\n    location: function location(newVal) {\n      if (newVal) {\n        var vm = this;\n        var geocoder = new window.google.maps.Geocoder();\n        geocoder.geocode({\n          location: this.location\n        }, function (results, status) {\n          if (status === 'OK') {\n            vm.address = results[0].formatted_address;\n          }\n        });\n      }\n    }\n  },\n  data: function data() {\n    return {\n      address: null\n    };\n  }\n};",{"version":3,"sources":["AddressDescription.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,KAAA,EAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,EAAA,GAAA,IAAA;AACA,YAAA,QAAA,GAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,QAAA,QAAA,CAAA,OAAA,CAAA;AAAA,UAAA,QAAA,EAAA,KAAA;AAAA,SAAA,EAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,cAAA,MAAA,KAAA,IAAA,EAAA;AACA,YAAA,EAAA,CAAA,OAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,iBAAA;AACA;AACA,SAJA;AAKA;AACA;AAXA,GAHA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA;AApBA,CAAA","sourcesContent":["<template>\n  <div v-if=\"location\" class=\"addressDescription\">\n    <label><b>{{title}}</b></label>\n    <label>{{address}}  </label>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AddressDescription',\n  props: ['title', 'map', 'location'],\n  watch: {\n    location: function (newVal) {\n      if (newVal) {\n        var vm = this\n        var geocoder = new window.google.maps.Geocoder\n        geocoder.geocode({ location: this.location }, function (results, status) {\n          if (status === 'OK') {\n            vm.address = results[0].formatted_address\n          }\n        })\n      }\n    }\n  },\n  data () {\n    return {\n      address: null\n    }\n  }\n}\n</script>\n\n<style scoped>\n.addressDescription{\n  border-style: solid;\n}\n</style>\n"],"sourceRoot":"src/components"}]}