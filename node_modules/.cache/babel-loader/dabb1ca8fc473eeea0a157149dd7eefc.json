{"remainingRequest":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\thread-loader\\dist\\cjs.js!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\babel-loader\\lib\\index.js!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\src\\components\\QueryControls.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\src\\components\\QueryControls.vue","mtime":1547787947173},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\package.json","mtime":1547793330307},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'QueryControls',\n  props: [\"pointsOfInterest\", \"routes\", \"global\"],\n  data: function data() {\n    return {\n      travelMode: null,\n      interestKeyword: null,\n      startPositionLocation: null,\n      endPositionLocation: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$eventHub.$on('startPositionChange', function (data) {\n      _this.startPositionLocation = data;\n    });\n    this.$eventHub.$on('endPositionChange', function (data) {\n      _this.endPositionLocation = data;\n    });\n  },\n  methods: {\n    generateColor: function generateColor(i) {\n      var colors = ['#FF0000', '#FF00FF', '#00FF00', '#0000FF', '#00FFFF', '#FF0088'];\n      return colors[i % colors.length];\n    },\n    foo: function foo(vm, response, newPointsInRoute) {\n      response.data.place_id.forEach(function (c) {\n        if (newPointsInRoute.find(function (q) {\n          return q.place.place_id === c;\n        })) {\n          return;\n        }\n\n        var service = new window.google.maps.places.PlacesService(vm.global.map);\n        service.getDetails({\n          placeId: c\n        }, function (place, status) {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            vm.routes.interestingPointsNearRoute.push({\n              location: {\n                lat: place.geometry.location.lat(),\n                lng: place.geometry.location.lng()\n              },\n              place: place,\n              isInPlan: false,\n              timeSpent: 0.5\n            });\n          }\n        });\n      });\n    },\n    calculateTravelTime: function calculateTravelTime(route) {\n      var sum = 0;\n      route.legs[0].steps.forEach(function (c) {\n        sum += c.duration.value;\n      });\n      return sum;\n    },\n    query: function query() {\n      var _this2 = this;\n\n      var waypointPointsOfInterest = [];\n      var newPointsInRoute = [];\n      this.routes.interestingPointsInRoute.forEach(function (c) {\n        if (c.isInPlan) {\n          waypointPointsOfInterest.push({\n            timeToSpend: c.timeSpent * 3600,\n            place_id: c.place.place_id\n          });\n          newPointsInRoute.push(c);\n        }\n      });\n\n      if (this.routes.interestingPointsNearRoute) {\n        this.routes.interestingPointsNearRoute.forEach(function (c) {\n          if (c.isInPlan) {\n            waypointPointsOfInterest.push({\n              timeToSpend: c.timeSpent * 3600,\n              place_id: c.place.place_id\n            });\n            newPointsInRoute.push(c);\n          }\n        });\n      }\n\n      var getBody = {\n        startPosition: {\n          lat: this.startPositionLocation.lat,\n          lng: this.startPositionLocation.lng\n        },\n        endPosition: {\n          lat: this.endPositionLocation.lat,\n          lng: this.endPositionLocation.lng\n        },\n        travelMode: this.travelMode.toLowerCase(),\n        pointsOfInterestKeyword: this.interestKeyword\n      };\n      console.log(\"We make request!\");\n      var vm = this;\n      vm.routes.interestingPointsInRoute = [];\n      vm.routes.interestingPointsNearRoute = [];\n      axios.get('http://127.0.0.1:8080/api/messages/', {\n        params: getBody\n      }) // axios.get('http://127.0.0.1:8090/routes', {body:getBody})\n      .then(function (response) {\n        vm.routes.fastestRoute = {\n          travelObjects: [response.data.routes[0]],\n          travelTime: _this2.calculateTravelTime(response.data.routes[0])\n        };\n\n        if (waypointPointsOfInterest.length === 0) {\n          _this2.foo(vm, response, newPointsInRoute);\n        }\n\n        vm.$eventHub.$emit('newRequest');\n      }).catch(function (e) {\n        console.log(\"Error in request: \" + e);\n      });\n\n      if (waypointPointsOfInterest.length > 0) {\n        // getBody.waypointPointsOfInterest = waypointPointsOfInterest;\n        vm.routes.interestingPointsInRoute = newPointsInRoute;\n        var positions = [];\n        positions.push({\n          lat: this.startPositionLocation.lat,\n          lng: this.startPositionLocation.lng\n        });\n        newPointsInRoute.forEach(function (c) {\n          positions.push({\n            lat: c.place.geometry.location.lat(),\n            lng: c.place.geometry.location.lng()\n          });\n        });\n        positions.push({\n          lat: this.endPositionLocation.lat,\n          lng: this.endPositionLocation.lng\n        });\n        vm.routes.interestingPointsInRoute = newPointsInRoute;\n        vm.routes.interestingRoute = {};\n        vm.routes.interestingRoute.travelObjects = [];\n        vm.routes.interestingRoute.travelTime = 0;\n        newPointsInRoute.forEach(function (c) {\n          vm.routes.interestingRoute.travelTime += c.timeSpent * 3600;\n        });\n        var j = 0;\n\n        for (var i = 0; i < positions.length - 1; i++) {\n          getBody = {\n            startPosition: positions[i],\n            endPosition: positions[i + 1],\n            travelMode: this.travelMode.toLowerCase(),\n            pointsOfInterestKeyword: this.interestKeyword\n          };\n          console.log(\"RequestX: \" + i);\n          axios.get('http://127.0.0.1:8080/api/messages', {\n            params: getBody\n          }) // axios.get('http://127.0.0.1:8090/routes2', {body: getBody})\n          .then(function (response) {\n            var to = response.data.routes[0];\n            to.color = vm.generateColor(j);\n            vm.foo(vm, response, newPointsInRoute);\n            vm.routes.interestingRoute.travelObjects.push(to);\n            vm.routes.interestingRoute.travelTime += _this2.calculateTravelTime(response.data.routes[0]);\n            vm.$eventHub.$emit('newRequest');\n            vm.$eventHub.$emit('updateRoutes', vm.routes);\n            j++;\n          }).catch(function (e) {\n            console.log(\"Error in request: \" + e);\n          });\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["QueryControls.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n    <select v-model=\"travelMode\">\r\n      <option disabled value=null>Travel mode</option>\r\n      <option value=\"DRIVING\">Driving</option>\r\n      <option value=\"WALKING\">Walking</option>\r\n      <option value=\"BICYCLING\">Bicycling</option>\r\n      <option value=\"TRANSIT\">Transit</option>\r\n    </select>\r\n  <select v-model=\"interestKeyword\">\r\n    <option disabled value=null>What you are looking for</option>\r\n    <option> Museum</option>\r\n    <option> Restaurant</option>\r\n    <option> Shop</option>\r\n  </select>\r\n  <button v-on:click=\"query\"  :disabled=\"(travelMode==null || interestKeyword == null\r\n    || startPositionLocation == null || endPositionLocation == null) && false\" >Query</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'QueryControls',\r\n  props: [\"pointsOfInterest\", \"routes\", \"global\"],\r\n  data () {\r\n    return {\r\n      travelMode: null,\r\n      interestKeyword: null,\r\n      startPositionLocation: null,\r\n      endPositionLocation: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$eventHub.$on('startPositionChange', data => {\r\n        this.startPositionLocation = data\r\n    });\r\n    this.$eventHub.$on('endPositionChange', data => {\r\n      this.endPositionLocation = data\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    generateColor: function(i){\r\n      var colors = ['#FF0000', '#FF00FF', '#00FF00', '#0000FF', '#00FFFF', '#FF0088']\r\n      return colors[i%colors.length];\r\n    },\r\n    foo: function(vm, response, newPointsInRoute){\r\n        response.data.place_id.forEach(c => {\r\n          if(newPointsInRoute.find( q => q.place.place_id === c)){\r\n            return;\r\n          }\r\n\r\n          var service = new window.google.maps.places.PlacesService(vm.global.map);\r\n          service.getDetails({\r\n            placeId: c\r\n          }, function (place, status) {\r\n            if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n              vm.routes.interestingPointsNearRoute.push(\r\n                      {\r\n                        location: {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()},\r\n                        place: place,\r\n                        isInPlan: false,\r\n                        timeSpent: 0.5\r\n                      });\r\n            }\r\n          })\r\n        });\r\n    },\r\n    calculateTravelTime: function(route){\r\n      var sum = 0;\r\n      route.legs[0].steps.forEach(c => {\r\n        sum += c.duration.value;\r\n      });\r\n      return sum;\r\n    },\r\n    query: function () {\r\n      var waypointPointsOfInterest= [];\r\n      var newPointsInRoute = [];\r\n      this.routes.interestingPointsInRoute.forEach(c => {\r\n        if(c.isInPlan) {\r\n          waypointPointsOfInterest.push({timeToSpend: c.timeSpent*3600, place_id: c.place.place_id})\r\n          newPointsInRoute.push(c)\r\n        }\r\n      });\r\n      if(this.routes.interestingPointsNearRoute) {\r\n        this.routes.interestingPointsNearRoute.forEach(c => {\r\n          if (c.isInPlan) {\r\n            waypointPointsOfInterest.push({timeToSpend: c.timeSpent * 3600, place_id: c.place.place_id})\r\n            newPointsInRoute.push(c)\r\n          }\r\n        });\r\n      }\r\n\r\n      var getBody = {\r\n        startPosition: {lat: this.startPositionLocation.lat, lng: this.startPositionLocation.lng} ,\r\n        endPosition: {lat: this.endPositionLocation.lat, lng:this.endPositionLocation.lng},\r\n        travelMode: this.travelMode.toLowerCase(),\r\n        pointsOfInterestKeyword: this.interestKeyword\r\n      };\r\n\r\n      console.log(\"We make request!\")\r\n      var vm = this;\r\n\r\n      vm.routes.interestingPointsInRoute = [];\r\n      vm.routes.interestingPointsNearRoute = [];\r\n      axios.get('http://127.0.0.1:8080/api/messages/', {params:getBody})\r\n      // axios.get('http://127.0.0.1:8090/routes', {body:getBody})\r\n              .then(response => {\r\n                vm.routes.fastestRoute = {travelObjects:  [response.data.routes[0]],\r\n                    travelTime:this.calculateTravelTime(response.data.routes[0]) };\r\n                if(waypointPointsOfInterest.length === 0 ){\r\n                    this.foo(vm, response, newPointsInRoute)\r\n                }\r\n\r\n                vm.$eventHub.$emit('newRequest');\r\n              })\r\n              .catch(e => {\r\n                console.log(\"Error in request: \"+e);\r\n              });\r\n\r\n      if(waypointPointsOfInterest.length > 0 ) {\r\n        // getBody.waypointPointsOfInterest = waypointPointsOfInterest;\r\n\r\n        vm.routes.interestingPointsInRoute = newPointsInRoute;\r\n\r\n        var positions = [];\r\n        positions.push({lat: this.startPositionLocation.lat, lng: this.startPositionLocation.lng})\r\n        newPointsInRoute.forEach(c => {\r\n          positions.push({lat: c.place.geometry.location.lat(), lng:c.place.geometry.location.lng()})\r\n        });\r\n        positions.push({lat: this.endPositionLocation.lat, lng:this.endPositionLocation.lng})\r\n\r\n        vm.routes.interestingPointsInRoute = newPointsInRoute;\r\n\r\n        vm.routes.interestingRoute = {};\r\n        vm.routes.interestingRoute.travelObjects = [];\r\n        vm.routes.interestingRoute.travelTime = 0;\r\n        newPointsInRoute.forEach(c => {\r\n          vm.routes.interestingRoute.travelTime += c.timeSpent*3600;\r\n        });\r\n\r\n        var j = 0;\r\n        for(var i = 0; i < positions.length-1; i++) {\r\n          getBody = {\r\n            startPosition: positions[i],\r\n            endPosition: positions[i+1],\r\n            travelMode: this.travelMode.toLowerCase(),\r\n            pointsOfInterestKeyword: this.interestKeyword\r\n          };\r\n\r\n          console.log(\"RequestX: \"+i)\r\n          axios.get('http://127.0.0.1:8080/api/messages', {params: getBody})\r\n          // axios.get('http://127.0.0.1:8090/routes2', {body: getBody})\r\n                  .then(response => {\r\n                    var to = response.data.routes[0];\r\n                    to.color = vm.generateColor(j);\r\n                    vm.foo(vm, response, newPointsInRoute);\r\n                    vm.routes.interestingRoute.travelObjects.push(to);\r\n\r\n                    vm.routes.interestingRoute.travelTime += this.calculateTravelTime(response.data.routes[0]);\r\n\r\n                    vm.$eventHub.$emit('newRequest');\r\n                    vm.$eventHub.$emit('updateRoutes',vm.routes );\r\n                    j++;\r\n                  })\r\n                  .catch(e => {\r\n                    console.log(\"Error in request: \" + e);\r\n                  });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src\\components"}]}