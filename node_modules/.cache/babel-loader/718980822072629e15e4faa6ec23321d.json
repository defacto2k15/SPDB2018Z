{"remainingRequest":"/home/aleksander/github/SPDB2018Z/node_modules/thread-loader/dist/cjs.js!/home/aleksander/github/SPDB2018Z/node_modules/babel-loader/lib/index.js!/home/aleksander/github/SPDB2018Z/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/aleksander/github/SPDB2018Z/src/services/messageService.js","dependencies":[{"path":"/home/aleksander/github/SPDB2018Z/src/services/messageService.js","mtime":1547760226990},{"path":"/home/aleksander/github/SPDB2018Z/package.json","mtime":1547693698894},{"path":"/home/aleksander/github/SPDB2018Z/node_modules/cache-loader/dist/cjs.js","mtime":1547693114817},{"path":"/home/aleksander/github/SPDB2018Z/node_modules/thread-loader/dist/cjs.js","mtime":1547563536524},{"path":"/home/aleksander/github/SPDB2018Z/node_modules/babel-loader/lib/index.js","mtime":1547693104938},{"path":"/home/aleksander/github/SPDB2018Z/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1547693109132}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport api from '@/services/api';\nexport default {\n  fetchMessages: function fetchMessages() {\n    return api.get(\"messages/\", {\n      params: {\n        \"startPosition\": {\n          \"lat\": 52.2288242,\n          \"lng\": 21.0130819\n        },\n        \"endPosition\": {\n          \"lat\": 52.2285690,\n          \"lng\": 21.0155288\n        },\n        \"travelMode\": \"DRIVING\",\n        \"waypointPointsOfInterest\": [{\n          \"timeToSpend\": 600,\n          \"place_id\": \"ChIJ2X3Sqe7MHkcRA8bKf48xRgU\"\n        }, {\n          \"timeToSpend\": 1200,\n          \"place_id\": \"ChIJZ6Mm9CvNHkcR8X0Q_rNKHTY\"\n        }],\n        \"pointsOfInterestKeyword\": \"restaurant\"\n      }\n    }).then(function (response) {\n      return response.data;\n    });\n  },\n  postMessage: function postMessage(payload) {\n    return api.post(\"messages/\", payload).then(function (response) {\n      return response.data;\n    });\n  },\n  deleteMessage: function deleteMessage(msgId) {\n    return api.delete(\"messages/\".concat(msgId)).then(function (response) {\n      return response.data;\n    });\n  }\n};",{"version":3,"sources":["/home/aleksander/github/SPDB2018Z/src/services/messageService.js"],"names":["api","fetchMessages","get","params","then","response","data","postMessage","payload","post","deleteMessage","msgId","delete"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,gBAAhB;AAEA,eAAe;AACbC,EAAAA,aADa,2BACG;AACd,WAAOD,GAAG,CAACE,GAAJ,cAAqB;AAACC,MAAAA,MAAM,EAAE;AACrC,yBAAiB;AAAC,iBAAM,UAAP;AAAmB,iBAAM;AAAzB,SADoB;AAErC,uBAAgB;AAAC,iBAAM,UAAP;AAAmB,iBAAM;AAAzB,SAFqB;AAGrC,sBAAc,SAHuB;AAIrC,oCAA6B,CACzB;AAAE,yBAAgB,GAAlB;AAAuB,sBAAW;AAAlC,SADyB,EAEzB;AAAE,yBAAgB,IAAlB;AAAwB,sBAAW;AAAnC,SAFyB,CAJQ;AAQrC,mCAA4B;AARS;AAAT,KAArB,EAUIC,IAVJ,CAUS,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAb;AAAA,KAVjB,CAAP;AAWD,GAbY;AAcbC,EAAAA,WAda,uBAcDC,OAdC,EAcQ;AACnB,WAAOR,GAAG,CAACS,IAAJ,cAAsBD,OAAtB,EACIJ,IADJ,CACS,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAb;AAAA,KADjB,CAAP;AAED,GAjBY;AAkBbI,EAAAA,aAlBa,yBAkBCC,KAlBD,EAkBQ;AACnB,WAAOX,GAAG,CAACY,MAAJ,oBAAuBD,KAAvB,GACIP,IADJ,CACS,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAb;AAAA,KADjB,CAAP;AAED;AArBY,CAAf","sourcesContent":["import api from '@/services/api'\n\nexport default {\n  fetchMessages() {\n    return api.get(`messages/`, {params: {\n    \"startPosition\": {\"lat\":52.2288242, \"lng\":21.0130819},\n    \"endPosition\" : {\"lat\":52.2285690, \"lng\":21.0155288},\n    \"travelMode\": \"DRIVING\",\n    \"waypointPointsOfInterest\" : [\n        { \"timeToSpend\" : 600, \"place_id\":\"ChIJ2X3Sqe7MHkcRA8bKf48xRgU\" },\n        { \"timeToSpend\" : 1200, \"place_id\":\"ChIJZ6Mm9CvNHkcR8X0Q_rNKHTY\" }\n    ],\n    \"pointsOfInterestKeyword\" : \"restaurant\"\n}})\n              .then(response => response.data)\n  },\n  postMessage(payload) {\n    return api.post(`messages/`, payload)\n              .then(response => response.data)\n  },\n  deleteMessage(msgId) {\n    return api.delete(`messages/${msgId}`)\n              .then(response => response.data)\n  }\n}"]}]}