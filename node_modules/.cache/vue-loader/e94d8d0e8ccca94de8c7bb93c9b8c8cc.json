{"remainingRequest":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\vue-slider-component\\src\\vue2-slider.vue?vue&type=template&id=76d451a7&","dependencies":[{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\vue-slider-component\\src\\vue2-slider.vue","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\studiaMagisterskie\\SPDB - Przestrzenne bazy danych\\projekt\\tymApp\\SPDB2018Z\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div\n  ref=\"wrap\"\n  :class=\"['vue-slider-component', flowDirection, disabledClass, stateClass, { 'vue-slider-has-label': piecewiseLabel }]\"\n  v-show=\"show\"\n  :style=\"[wrapStyles, boolDisabled ? disabledStyle : null]\"\n  @click=\"wrapClick\"\n>\n  <div ref=\"elem\" aria-hidden=\"true\" class=\"vue-slider\" :style=\"[elemStyles, bgStyle]\">\n    <template v-if=\"isRange\">\n      <div\n        ref=\"dot0\"\n        key=\"dot0\"\n        :class=\"[\n          tooltipStatus,\n          'vue-slider-dot',\n          {\n            'vue-slider-dot-focus': focusFlag && focusSlider === 0,\n            'vue-slider-dot-dragging': flag && currentSlider === 0,\n            'vue-slider-dot-disabled': !boolDisabled && disabledArray[0]\n          }\n        ]\"\n        :style=\"dotStyles\"\n        @mousedown=\"moveStart($event, 0)\"\n        @touchstart=\"moveStart($event, 0)\"\n      >\n        <slot name=\"dot\" :value=\"val[0]\" :index=\"0\" :disabled=\"disabledArray[0]\">\n          <div\n            class=\"vue-slider-dot-handle\"\n            :style=\"[\n              (!boolDisabled && disabledArray[0])\n              ? disabledDotStyles[0]\n              : null,\n              sliderStyles[0],\n              focusFlag && focusSlider === 0 ? focusStyles[0]: null\n            ]\"\n          ></div>\n        </slot>\n        <div ref=\"tooltip0\" :class=\"['vue-slider-tooltip-' + tooltipDirection[0], 'vue-slider-tooltip-wrap']\">\n          <slot name=\"tooltip\" :value=\"val[0]\" :index=\"0\" :disabled=\"!boolDisabled && disabledArray[0]\">\n            <span class=\"vue-slider-tooltip\"  :class=\"tooltipClass\" :style=\"tooltipStyles[0]\">{{ formatter ? formatting(val[0]) : val[0] }}</span>\n          </slot>\n        </div>\n      </div>\n      <div\n        ref=\"dot1\"\n        key=\"dot1\"\n        :class=\"[\n          tooltipStatus,\n          'vue-slider-dot',\n          {\n            'vue-slider-dot-focus': focusFlag && focusSlider === 1,\n            'vue-slider-dot-dragging': flag && currentSlider === 1,\n            'vue-slider-dot-disabled': !boolDisabled && disabledArray[1]\n          }\n        ]\"\n        :style=\"dotStyles\"\n        @mousedown=\"moveStart($event, 1)\"\n        @touchstart=\"moveStart($event, 1)\"\n      >\n        <slot name=\"dot\" :value=\"val[1]\" :index=\"1\" :disabled=\"disabledArray[1]\">\n          <div\n            class=\"vue-slider-dot-handle\"\n            :style=\"[\n              (!boolDisabled && disabledArray[1])\n              ? disabledDotStyles[1]\n              : null,\n              sliderStyles[1],\n              focusFlag && focusSlider === 1 ? focusStyles[1]: null\n            ]\"\n          ></div>\n        </slot>\n        <div ref=\"tooltip1\" :class=\"['vue-slider-tooltip-' + tooltipDirection[1], 'vue-slider-tooltip-wrap']\">\n          <slot name=\"tooltip\" :value=\"val[1]\" :index=\"1\" :disabled=\"!boolDisabled && disabledArray[1]\">\n            <span class=\"vue-slider-tooltip\" :class=\"tooltipClass\" :style=\"tooltipStyles[1]\">{{ formatter ? formatting(val[1]) : val[1] }}</span>\n          </slot>\n        </div>\n      </div>\n    </template>\n    <template v-else>\n      <div\n        ref=\"dot\"\n        key=\"dot\"\n        :class=\"[\n          tooltipStatus,\n          'vue-slider-dot',\n          {\n            'vue-slider-dot-focus': focusFlag && focusSlider === 0,\n            'vue-slider-dot-dragging': flag && currentSlider === 0\n          }\n        ]\"\n        :style=\"dotStyles\"\n        @mousedown=\"moveStart\"\n        @touchstart=\"moveStart\"\n      >\n        <slot name=\"dot\" :value=\"val\" :disabled=\"boolDisabled\">\n          <div\n            class=\"vue-slider-dot-handle\"\n            :style=\"[\n              sliderStyles,\n              focusFlag && focusSlider === 0 ? focusStyles : null\n            ]\"\n          ></div>\n        </slot>\n        <div :class=\"['vue-slider-tooltip-' + tooltipDirection, 'vue-slider-tooltip-wrap']\">\n          <slot name=\"tooltip\" :value=\"val\">\n            <span class=\"vue-slider-tooltip\"  :class=\"tooltipClass\" :style=\"tooltipStyles\">{{ formatter ? formatting(val) : val }}</span>\n          </slot>\n        </div>\n      </div>\n    </template>\n    <ul class=\"vue-slider-piecewise\">\n      <li\n        v-for=\"(piecewiseObj, index) in piecewiseDotWrap\"\n        class=\"vue-slider-piecewise-item\"\n        :style=\"[piecewiseDotStyle, piecewiseObj.style]\"\n        :key=\"index\"\n      >\n        <slot\n          name=\"piecewise\"\n          :value=\"val\"\n          :label=\"piecewiseObj.label\"\n          :index=\"index\"\n          :first=\"index === 0\"\n          :last=\"index === piecewiseDotWrap.length - 1\"\n          :active=\"isActive(piecewiseObj.index)\"\n        >\n          <span\n            v-if=\"piecewise\"\n            class=\"vue-slider-piecewise-dot\"\n            :style=\"[ piecewiseStyle, isActive(piecewiseObj.index) ? piecewiseActiveStyle : null ]\"\n          ></span>\n        </slot>\n\n        <slot\n          name=\"label\"\n          :value=\"val\"\n          :label=\"piecewiseObj.label\"\n          :index=\"index\"\n          :first=\"index === 0\"\n          :last=\"index === piecewiseDotWrap.length - 1\"\n          :active=\"isActive(piecewiseObj.index)\"\n        >\n          <span\n            v-if=\"piecewiseLabel\"\n            class=\"vue-slider-piecewise-label\"\n            :style=\"[ labelStyle, isActive(piecewiseObj.index) ? labelActiveStyle : null ]\"\n          >\n            {{ piecewiseObj.label }}\n          </span>\n        </slot>\n      </li>\n    </ul>\n    <div\n      ref=\"process\"\n      :class=\"['vue-slider-process', { 'vue-slider-process-dragable': isRange && processDragable }, processClass]\"\n      :style=\"processStyle\"\n      @click=\"processClick\"\n      @mousedown=\"moveStart($event, 0, true)\"\n      @touchstart=\"moveStart($event, 0, true)\"\n    >\n    <div\n      ref=\"mergedTooltip\"\n      :class=\"['vue-merged-tooltip', 'vue-slider-tooltip-' + tooltipDirection[0], 'vue-slider-tooltip-wrap']\"\n      :style=\"tooltipMergedPosition\"\n    >\n        <slot name=\"tooltip\" :value=\"val\" :merge=\"true\">\n          <span class=\"vue-slider-tooltip\" :class=\"tooltipClass\"  :style=\"tooltipStyles\">\n            {{ mergeFormatter ? mergeFormatting(val[0], val[1]) : (formatter ? (val[0] === val[1] ? formatting(val[0]) : `${formatting(val[0])} - ${formatting(val[1])}`) : (val[0] === val[1] ? val[0] : `${val[0]} - ${val[1]}`)) }}\n          </span>\n        </slot>\n    </div>\n  </div>\n  <input v-if=\"!isRange && !data\" class=\"vue-slider-sr-only\" type=\"range\" v-model=\"val\" :min=\"min\" :max=\"max\" />\n  </div>\n</div>\n",null]}