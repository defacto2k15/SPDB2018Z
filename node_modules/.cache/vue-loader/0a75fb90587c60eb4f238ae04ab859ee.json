{"remainingRequest":"/home/aleksander/github/connect/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aleksander/github/connect/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aleksander/github/connect/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aleksander/github/connect/src/components/Messages.vue?vue&type=template&id=4798c908&scoped=true&","dependencies":[{"path":"/home/aleksander/github/connect/src/components/Messages.vue","mtime":1547562353981},{"path":"/home/aleksander/github/connect/node_modules/cache-loader/dist/cjs.js","mtime":1547693114817},{"path":"/home/aleksander/github/connect/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1547693117285},{"path":"/home/aleksander/github/connect/node_modules/cache-loader/dist/cjs.js","mtime":1547693114817},{"path":"/home/aleksander/github/connect/node_modules/vue-loader/lib/index.js","mtime":1547693117285}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"hello\" },\n    [\n      _c(\"img\", {\n        staticStyle: { width: \"250px\" },\n        attrs: { src: require(\"@/assets/logo-django.png\") }\n      }),\n      _c(\"p\", [\n        _vm._v(\n          \"The data below is added/removed from the SQLite Database using Django's ORM and Rest Framework.\"\n        )\n      ]),\n      _c(\"br\"),\n      _c(\"p\", [_vm._v(\"Subject\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.subject,\n            expression: \"subject\"\n          }\n        ],\n        attrs: { type: \"text\", placeholder: \"Hello\" },\n        domProps: { value: _vm.subject },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.subject = $event.target.value\n          }\n        }\n      }),\n      _c(\"p\", [_vm._v(\"Message\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.msgBody,\n            expression: \"msgBody\"\n          }\n        ],\n        attrs: { type: \"text\", placeholder: \"From the other side\" },\n        domProps: { value: _vm.msgBody },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.msgBody = $event.target.value\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: {\n          type: \"submit\",\n          value: \"Add\",\n          disabled: !_vm.subject || !_vm.msgBody\n        },\n        on: {\n          click: function($event) {\n            _vm.addMessage({ subject: _vm.subject, body: _vm.msgBody })\n          }\n        }\n      }),\n      _c(\"hr\"),\n      _c(\"h3\", [_vm._v(\"Messages on Database\")]),\n      _vm.messages.length === 0 ? _c(\"p\", [_vm._v(\"No Messages\")]) : _vm._e(),\n      _vm._l(_vm.messages, function(msg, index) {\n        return _c(\"div\", { key: index, staticClass: \"msg\" }, [\n          _c(\"p\", { staticClass: \"msg-index\" }, [\n            _vm._v(\"[\" + _vm._s(index) + \"]\")\n          ]),\n          _c(\"p\", {\n            staticClass: \"msg-subject\",\n            domProps: { innerHTML: _vm._s(msg.subject) }\n          }),\n          _c(\"p\", {\n            staticClass: \"msg-body\",\n            domProps: { innerHTML: _vm._s(msg.body) }\n          }),\n          _c(\"input\", {\n            attrs: { type: \"submit\", value: \"Delete\" },\n            on: {\n              click: function($event) {\n                _vm.deleteMessage(msg.pk)\n              }\n            }\n          })\n        ])\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}